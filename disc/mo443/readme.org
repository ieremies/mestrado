#+Title: MO443 - Processamento de Imagem Digital
#+Subtitle: Prof. Helio
#+category: mo443
#+Options: toc:nil num:nil date:nil tags:nil
#+LATEX_CLASS_OPTIONS: [twocolumn, 10pt]
#+COLUMNS: %25ITEM %TODO %EFFORT{+}

[[https://www.ic.unicamp.br/~helio/][Helio Pedrini's Homepage]]

* Slides [100%]
** DONE Introdução
CLOSED: [2023-06-17 Sat 15:51]
** DONE Fundamentos
CLOSED: [2023-06-17 Sat 15:51]
:PROPERTIES:
:EFFORT:   103
:END:
Amostragem discretiza o espaço e quantização diz o número de níveis de cinza.

Precisamos de uma amostra a cada 1/2B onde 2B é o tamanho da banda [-B, B] (limite de nyquist).
Caso não seja usado uma frequência de banda suficientemente larga, sinais com frequência alta são reconstruídos com frequências baixas causando *aliasing*.

Resolução espacial tem a ver com o quanto de espaço real um pixel representa.
** DONE Realce
CLOSED: [2023-06-17 Sat 15:51]
:PROPERTIES:
:EFFORT:   143
:END:
** DONE Filtragem em frequência
CLOSED: [2023-06-17 Sat 15:51]
:PROPERTIES:
:EFFORT:   121
:END:

*** Fundamentos
Sinal :: representação de um fenômeno a partir da variação de características físicas ao longo do tempo ou espaço
Tipos de sinais:
- contínuos ::  estados são definidos ininterruptamente
- discretos :: estados definido em instantes específicos
- analógicos :: estados podem assumir qualquer valor real ou complexo
- digitais :: estados podem assumir um subconjuntod e valores discretos enumeráveis

Sinais analógicos podem ser convertidos em sinais digitais a partir da amostragem, quantização e codificação.
Na amostragem, o espaço (tempo) de amostragem é dividido em partes discretas. Na quantização há a aproximação do valor de amplitude ao conjunto finito de possibilidades. Codificação corresponde à correlação de tais níveis a um código.

*** Transformadas de imagens
Operações que alteram o espaço de representação de uma imagem para outro domínio de forma que:
- a informação presente na imagem seja preservada no domínio da transformada
- a transformada seja reversível

Um exemplo destas é a transformada de Fourrier

*** Amostragem
representação de um sinal contínuo por um número finito de valores

*Teorema da amostragem* é possível rescontruir um sinal (de banda limitada) contínuo  a partir de suas amostras se a frequência de amostragem exceder duas vezes a largura da banda.

*Transformada discreta de Fourier* (DFT) converte um conjunto finito de N amostras uniformemente espaçadas numa função de senoidais complexas.

*** Convolução
To entendendo nada, as parece ser a soma dos sinais, um vindo da esquerda pra direita e outro da direita para esquerda.
** DONE Segmentação :ATTACH:
CLOSED: [2023-05-16 Tue 15:06]
:PROPERTIES:
:EFFORT:   130
:ID:       3dcbe9d4-8b2b-4e9d-a16c-58de824c3af1
:END:
Particionar o conjunto de dados em estruturas com conteúdo semântico -> após determinarmos os objetos, caracterimo-nos por meio de suas propriedades.

Os métodos se baseam nas descontinuidades (mudanças abruptas) e similaridades.

Detectar pontos pode ocorrer por meio da máscara
[[attachment:_20230510_211241screenshot.png]]
Para segmentos de reta, fazemos algo similar só que com um traço em diversas direções.

*** Detecção de bordas :ATTACH:
Podemos fazê-la a partir do entendimento da mudança brusca nos níveis de cinza, observando a primeira e segunda derivadas.

Assim, podemos também utilizar o conceito de gradiente, dada a natureza $\mathbb{Z}^2$ das imagens.
A direção do gradiente, quando sua maginitude é suficientemente grande, indica a orientação da borda do objeto.
Podemos obter uma aproximação suficientemente descente da magnitude do gradiente somando a derivada em cada direção ou pegando a maior delas.
Já do ângulo, tiramos o $arctan(\frac{g_x}{g_y})$.
Exsitem diversas máscara que aproximam o gradiente.

*** Laplaciano
$\triangledown^2$
Operador que pode ser utilizado no gradiente e é aproximado por uma máscara 3x3 na qual o pixel central é positivo e todos os outros negativos. Idealmente, os mais próximo possuem valores ainda maiores.

*** Laplaciano do gaussiano e diferença do gaussiano :ATTACH:
As derivadas segundas são sensíveis a ruídos.
Podemos reduzi-los aplicando um filtro gaussiano e, posteriormente, detectamos bordas pelo cruzamento em zero da segunda derivada e um pico significativo na primeira.

Resolvendo a equação do laplaciano do gaussiano, temos uma função que parece um chapeu mexicano invertido.

[[attachment:_20230514_194521screenshot.png]]
Há evidências que o olho faz algo similar.

Ele pode ser aproximado pela convolução de uma máscara que é a diferença entre duas funções Gaussianas com valores de $\sigma$ significativamente diferentes.
*** Canny
- Gaussiano
- computa-se a magnitude e direção do gradiente a partir das derivadas parciais
- borda é pontos cuja magnitude seja localmente máxima na direção do gradiente (supressão não máxima)
- Usa-se um limiar para remover os fragmentos expúrios
*** Boie e Cox
Similar ao Canny, mas usam o cruzamento do zero na derivada segunda.
*** Transformada de Hugh
Técnica para determinar se uma curva passa por um certo conjunto de pontos.
Para retas, usamos o fato que a reta deve possuir os mesmos coeficientes angulares e lineares, ou fazemos isso usando coordenadas polares, onde $\rho$ é a distância da origem à reta e $\theta$ é o ângulo.
O espaço ($\rho$, $\theta$) chamado espaço de Hough, pontos colineares no espaço (x,y) correspondem a curvas senoidais que se interceptam.

Para implementa-lo, discretizamos o espaço $(\rho,\theta)$ e cada célula do espaço é considerada uma célula de acumulação.
Testamos várias combinações e somamos baseado na quantidade de pontos colineares para tais combinações.
Picos são usados para determinar segmentos reais na imagem.

Útil para várias retas, já que apresentaram-se na forma de diversos picos e é insensível a ruídos e descontinuidades, já que estes representaram apenas uma redução do máximo local.
O problema é na detecção de formas com mais parâmetros, o que aumenta a computação necessária -> podemos reduzir isso usando o gradiente das curvas.

O mesmo é feito para circunferências. Já para formas em geral, utilizamos a ideia de manter uma tabela de distãncia e ângulo de cada ponto da forma e utilizamos a ideia de acumulção da mesma forma.
*** Limiarização
Classsificação dos pixels baseado num limiar que os separada em objeto e fundo.
No caso global, toda a imagem obedece o mesmo valor, no caso local, este é calculado baseado numa janela da imagem, o que é severamente influenciado pelo tamanho da janela.

No método global, uma forma é tentar minimizar o erro da distribuição da gaussianas que definem o histograma dos pixels.

*** Segmentação de regiões
a. Cada pixel deve pertencer a uma região da imagem
b. Pixels satisfazem critérios de conectividade
c. Regiões devem ser disjuntas
d. Pixels de uma certa região devem satisfazer uma propriedade
e. Regiões adjacentes devem diferer em tal propriedade

Técnicas:
- Crecimento de regiões :: Agrega pixels com propriedades similares e, portanto, precisa de pixels sementes de onde começar
- Segmentação de regiões :: começamos de uma grande região com a imagem inteira e vamos dividindo (quadtree).

** DONE Representação e descrição
CLOSED: [2023-05-09 ter 15:17]
:PROPERTIES:
:EFFORT:   79
:END:
Um objeto pode ser descrito por suas características externas (bordas) ou internas (pixels que compõem).
Para descrevê-lo, precisamos de uma forma que seja pouco afetado pela presença de ruído.
# Algo que parece importante dessa parte é saber se cada técnica é invariante à rotação, translação e mudança de escala

*** Esquemas de representação
**** Freeman - código da cadeia
cada número representa a direção do próximo pixel da borda (zero é sempre pra direita, crescendo no sentido horário).
Ele varia conforme o pixel inicial, mas podemos normalizar encontrando o menor número inteiro que o represente.
Para torná-lo invariante com a mudança de escala, a borda pode ser reamostrada em uma grade de espamaento conveniente.
Diferença no código da cadeia é a soma das diferenças entre cada dígito e o próximo (mod vizinhança).
Uma mesma borda rotacionada possui a mesma diferença no código da cadeia independente da horientação, o que caracteriza o mesmo objeto.
Vantagens: redução do espaç de armazenamento
Desvantagem: sensibilidade a pequenas perturbações ao longo da borda.
**** Polígonos
Representamos a forma a partir de um polígono, dado uma precisão.
Em cortonos fechados, podemos torna-la exata se a quantidade de vértices for igual ao número de pontos na borda.
Isso pode ser caro, mas tem certas técnicas para aproximar em tempo aceitável.
Uma forma de fazer a borda é dividir em segmentos, toda vez que a distância perpendicular exceder o erro aceitável, esse ponto torna-se um novo vértice.
**** Assinatura :ATTACH:
:PROPERTIES:
:ID:       f79cc512-7365-4853-9fe5-ec45714f0f10
:END:
Função de onda da distância do centro a borda

[[attachment:_20230508_204328screenshot.png]]
Invariante em relação a tranlação, mas precisamos determinar um ponto inicial para ser indiferente a rotação ou normalizar os vetores para obter a invariância em relação à escala.
**** Fecho convexo
Menor polígono convexo que abrange o objeto
**** Esqueleto de um objeto
- ponto médio: conjuntos de pontos que equidistam de bordas (baseado nas maiores esferas)
- transformada de distância: mapa da distância entre cada ponto interior, valores mais altos formam o esqueleto
- diagrama de voroni: para uma forma de n vértices, repartimos o plano em n subconjuntos tais que os pontos interiores daquele conjunto estão mais próximos do que de qualquer outro ponto.
*** Técnicas de afinamento
Técnicas de afinamentos devem se atentar a não torna-lo desconexo ou causa erosão excessiva.
**** Zhang e Suen:
um pixel é removido se
- tem mais que um e menos que 7 vizinhos,
- se o número de transições de branco para preto na vizinhança ordenada é 1
- se ao menos um dos pixels cima direita baixo é fundo
- se ao menos um dos pixels direita baixo esquerda é fundo
Depois repetimos o processo, só que agora nas útlimas duas instruções usamos baixo esquerda cima e esquerda cima direita.
Repetimos tudo até não haver mais remoções.

**** Holt
Refina o método de Zhang: passos de zhang removendo serrilhamento a partir da percepção de que pixels que formam uma escada pode ser removidos sem quebrar a conectividade do objeto.
**** Stentiford e Mortimer
Quatro máscaras 3x3 com 0 1 1 no meio em cada uma das direções.
Um ponto final é um ponto que só possui um pixel preto como vizinho, este não pode ser removido.
*** Descritores de borda :ATTACH:
:PROPERTIES:
:ID:       cdb63161-ae5d-4537-acf6-00aeb54f3428
:END:
- Diâmetro :: a maior distância entre dois pontos da borda.
- Perímetro :: o número de pixels na borda.
- Curvatura :: a medida do angulo de dois segmentos de reta da borda (arctg).
- Energia de deformação ::
[[attachment:_20230509_151257screenshot.png]]
*** Descritores de região
- Área :: a soma dos pixels 1 ou pela soma abaixo
[[attachment:_20230509_144318screenshot.png]]
- Compacidade :: o quadrado do perímetro dividido pela área, o círculo possui a menor compacidade
- Projeções horizontal e vertical :: para um pixel (x,y) a projeção horizontal é a soma dos pixels na linha y (respc para vertical)
- Propriedades topológicas :: O número de buracos ou componentes conexas são propriedades invariantes das formas.
  O número de Euler é dado como E = C - H (conexas - buracos) também é uma propriedade topológica
- eixo maior :: o comprimeto do maior segmento de reta (respc menor).
- excentricidade :: o comprimento do maior dividido pelo menor.
- Retângulo envolvente :: o retângulo de menor dimensões que envolve o objeto bidimensional e cujos lados são paralelos aos eixos.
- Convexidade :: mede o grau ocm que o um objeto difere de um objeto convexo, pode ser dada pelo perímetro convexo dividido pelo perímetro real (o valor será 1 para o bjetos convexos).
- Retangularidade :: a área do objeto dividido pela área do retângulo envolvente.
- Solidez :: mede a densidade de um objeto, área do objeto dividio pela área do fecho convexo (1 para sólidos e menor que 1 para objetos com bordas irregulares ou buracos).
**** TODO Momento
*** Sintáticos ou relacionais
...
** DONE Morfologia matemática
CLOSED: [2023-05-09 ter 17:42]
:PROPERTIES:
:EFFORT:   88
:END:
Contrução de opearadores para descrição de objetos.
*** Fundamentos matemáticos
Teoria de conjuntos $\{(x,y) | f(x,y) = 1\} \in \mathbb{Z}^2$, ou seja, conjunto dos pontos 1.
Assim definimos própriamente união, intersecção, translação  ($A + p = \{a + p | a \in A\}$), reflexão ($\{-a | a \in A\}$), complemento e diferença.
Operador morfológico: mapeamento entre um conjunto A que define uma imagem e um conjunto B, chamado de elemento estruturante.

- Adição de Minkowski (dilatação) :: $\oplus$ para cada ponto da imagem, carimbamos o B. (comutativa, associativa).
- Subtração de Minkowski (erosão) :: $\ominus$ para cada ponto da imagem, se o B cabe inteiro, a origem é marcada.
É importante marcar que, para as duas operações, os elementos da primeira imagem não estão necessáriamente contidos, qunado dizemos "carimbar", referimos a colocar na imagem resultante que inicialmente é vazia.

As propriedades de associatividade e distributividade podem nos ajudar a reduzir os elementos estruturantes à componentes menores.
- Abertura :: (círculo vazio) de A por B é denotada por $(A \ominus B) \oplus B$ -> parte estreitas são removidas
- Fechamento :: (circulo preenchido) de A por B é denotoda $(A \oplus B) \ominus B$ -> buracos são preenchidos
- Acerto-ou-erro :: de A por B_1 e B_2 é definida por $A\circledast (B_1, B_2) = (A \ominus B) \cap (A^c \ominus B_2)$, ou seja, o resultante possui todos os pontos nos quais B_1 coincide com A e não coincide nenhum com B_2
  # TODO eu não entendi esse exemplo [[pdf:slides/aula_morfologia.pdf::41][aqui]]

Usaremos tais operadores para extrair características de objetos
**** Extração de borda
$E(A) = A - (A \ominus B)$, já que a erosão vai deixar só os pixels de dentro (gradiente interno), é como se eu tivesse marcando a borda por dentro.
Ou $E(A) = (A \oplus B) - A$, já que a dilatação vai crescer um pouco o objeto (gradiente externo), é como se eu estive marcando a borda por fora.
Ou $E(A) = (A \oplus B) - (A \ominus B)$, que é a soma dos dois anteriores (gradiente morfológico).
**** Preenchimento de regiões
Fazemos a dilatação a partir de um ponto semente dentro do objeto. A cada iteração dilatamos mais, mas também tiramos os elementos que pertencem à borda, para que não ultrapassemo-na.
**** Extração de componentes conexos
Fazemos a dilatação a partir de uma semente e retiramos todos que não estão em A. Assim, quando não há mais mudança, é porque percorremos todos os pixels conectados destes componente.
**** Fecho convexo :ATTACH:
:PROPERTIES:
:ID:       1e8bdef7-069f-41c6-b41d-bd15874a1a41
:END:
Sejam B_1, B_2, B_3 e B_4, o processo consiste em realizar a o acerto-ou-erro para B_1 afim de formar D_1 e assim respectivamente para os demais. O fecho convexo é a união dos D_i.
[[attachment:_20230509_172345screenshot.png]]

**** TODO Afinamento e espessamento
Afinamento :: $A \otimes B = A - (A \circledast B)$, em que $B = (B_1, B_2)$ distintos.
Espessamento :: $A \otimes B = A \cup (A \circledast B)$, em que $B = (B_1, B_2)$ distintos.
**** TODO Extração do esqueleto
**** Imagens monocromáticas :ATTACH:
:PROPERTIES:
:ID:       1aba1cf8-500e-4d3f-af12-f47ec39417a3
:END:
Para imagens monocromáticas, operamos com valores de intensidade.
Na dilatação, aplica-se a translação do elemento estruturante sobre todas as posições da imagem e para cada uma os valores do elemento estruturantes tomando-se o máximo.
A erosão é similar, tomando-se o mínimo. Vale mencionar que colocamos o valor final na origem.

A abertura e fechamento podem ser modificados a partir disso. A visão geométrica na qual ordenamos o os pixels e a altura é a intensidade.
[[attachment:_20230509_173600screenshot.png]]
**** Realce de contraste
- top-hat :: a diferença entre a imagem e sua abertura
- botton-hat :: a diferença seu fechamento e imagem.

Podemos realçar o contraste da imagem somando a ela o top-hat e subtriando depois o botton-hat.
O borramento pode ser reduzido a partir da substituição do pixel original pelo pixel correspondente na abertura ou fechamento, o que estiver mais próximo do original.
**** Granulometria
Estimativa da distribuição dos tamanhos dos objetos.
Podemos fazê-lo contando o número de componentes conexos após cada operação de abertura (progressivamente removendo os elementos em ordem crescente de tamanho).
**** Atenuação de ruído
Podemos atenuar o ruído sal e pimenta com operações sucetivas de abertura e fechamento.

** DONE Lista 1
CLOSED: [2023-06-17 Sat 15:51] DEADLINE: <2023-05-15 Mon>
1. Podemos diferentes diagramas para cada cor coponente da imagem (RGB) ou estabelecer alguma relação entre os valores das 3 cores e um número, como a soma ou composição de um inteiro.
2. Filtro da média suaviza a imagem e elimina altas frequências, já a mediana exarceba diferenças entre regiões.
3. As 4 características principais do filtro gaussiano são suficientes para mostrar que ele é bom para suavizar (separabilidade, simétrico, alguma coisa do desvio padrão, controle).
4. -
5. Detectar mudanças brucas, não sofrer grandes alterações com ruído e detectar mudanças na direção desejada, evitar descontinuidades, fina e contínua, evitar fragmentos expúrios, eficiente.
6. Profundidade: quantidade de bits para cada pixels.
   Resolução espacial: quantidade de detalhes do ambiente.
7. está conectado, 9 componentes na vizinhança-4 e 4 na vizinhança-8
8. O gradiente indica a direção e frequência com a qual a intensidade da imagem está mudando. Valores maiores indicam mudanças bruscas, o que indica bordas no sentido perpendicular a direção do gradiente.
9. ??????
10. -
11. -
12. -
13. A entropia é uma medida da quantidade de informações contidas na imagem que se baseia na probabilidade de cada valor de intensidade aparecer. Quanto mais espalhada em cada valor possível, maior a entropia.
14. Tais operações são utilizadas na erosão e abertura de objetos, bem como detecção de bordas e preenchimento.
15. A amostragem define as linhas e colunas e está relacionado
16. Por ser derivado de segunda ordem ele é sucetivo a ruído.
17. ????
18. A(s) bin(s) com maior quantidade
19. -
20. Dois vetores que multiplicadas dão a matriz que queremos. Se for possível, temos que é separavel

Um filtro passa alta retorna zero numa região homogênea
Na convolução o Kernel tem que sofrer uma rotação de 180 (??)

** DONE Cores
CLOSED: [2023-06-17 Sat 16:09]
:PROPERTIES:
:EFFORT:   39
:END:
A formação de cores se dá por meio de dois processos:
- aditivo :: energias dos fótons são combinados
- subtrativo :: quando a luz passa por um meio que filtra certas frequências

As características das cores são /brilho/, /matiz/ e a /saturação/.
- brilho :: ou liminância representa a noção de intensidade da radiação (claro ou escuro)
- matiz :: associada ao comprimento de onda (azul ou vermelho)
- saturação :: pureza do matiz, grau de mistura do original com a luz branca (cores puras são completamente saturadas)

Matiz + saturação são chamados de /crominância/.

*** Modelos de cores
Sistemas de representação tri-dimensional das cores, usando as caracterîsticas acima.
O espaço de cores possíveis num modelo é chamado de gamute.

Em modelos aditivos, a cor branca é a soma de todas as cores.
Em modelos subtrativos, é a ausência (ausência da filtragem).

O modelo CMY, subtrativo, é usado em dispositivos de pigmentação e, para evitar o consumo excessivo de tinta, muitas vezes adiciona o preto, formando o CMYK.
O modelo HSV (hue, saturation, value) forma uma pirâmide hexagonal, na qual a base é composta das 3 cores primárias e 3 secundárias e a altura é a luminância (sendo a base a mais clara).
O modelo HSL forma dois cones de altura 1 total, onde uma das pontas é o preto e outra o branco.
O meio, largo ficam as cores.

** DONE Textura
CLOSED: [2023-06-19 seg 15:44]
:PROPERTIES:
:EFFORT:   53
:END:

Finas :: interações aleatórias e grandes variações
Ásperas :: interações melhor definidas e regiões homogêneas

Extração procura retirar um quantidade de dados representativa e simplificada, enquanto a seleção visa reduzir o número de medidas

*** Matriz de coocorência
Matriz definida a partir de uma relação entre pixels (por exemplo, visinho ao lado), onde a posição i,j da matriz é a quantidade de pares na relação que possuem uma transição do nível de cinza i para j.
Utilizamos esta matriz na forma normalizada (dividindo cada elemento pelo número total de transições).

Para generalizar, podemos definir a relação entre pixels a partir da distância e ângulo (zero graus é direita) entre eles.
Qualquer alteração nessas medidas altera de forma significativa na matriz, a qual não tem mais informações espaciais sobre os pixels originais.

- Segundo momento angular :: (energia) expressa a uniformidade de uma textura $f_{sma} = \sum \sum p_{i,j}^2$.
  Em texturas ásperas, poucos elementos da coocorencia normalizada apresentam valores diferentes de zero e, quando ocorrem, são próximos de um e o segundo momento angular apresenta valor próximo a 1.
- Entropia :: quando uma imagem não é uniforme, as entradas $p_{i,j}$ apresentam valores próximos a zero e $f_{ent} = - \sum \sum p_{i,j} log(p_{i,j})$ em valorea altos não normalizados.
- Contraste :: diferença entre tons de cinza, baixo ocorre quando há pequena diferença entre os níveis  em uma região contínua $f_{con} = \sum \sum (i-j)^2 p_{i,j}$.
- Heterogeneidade ::
- Correlação ::
- Homogeneidade ::

*** Matrizes de comprimento de corridas de cinza
Matriz dada por $P(i,j|\theta)$ contém a quantidade de corridas do mesmo nível de cinza $i$ e comprimento $j$ na direção $\theta$.
Uma corrida de tamanho 4 e 21 de tamanho -> fina.
Várias corridas de tamanho grande -> expessa

*** Função de autocorrelação
Finas -> primitivas pequenas -> frequências especiais altas
A função de auto correlação descreve as interações epsaciais entre as primitivas
*** Unidade de textura
Definida a partir da relação do pixel central com seus 8 vizinhos. Para cada um deles, olhamos se ele é menor, igual ou maior que o valor do pixel central. Associamos 0, 1, 2 respecitivamente e definimos a unidade como o polinômio a_1 3^0 +  a_2 3^1... um número na base 3, Perceba que a ordem importa!

LBP Padrões locais binários usa a mesma ideia só que zeros e uns
** DONE Registro :ATTACH:
CLOSED: [2023-06-19 seg 17:30]
:PROPERTIES:
:EFFORT:   68
:ID:       f912474e-2e4a-43f1-959a-b8ac36080d6e
:END:
Trans formações geométrias: transformação espacial (reorganização dos pixels no plano) + interpolação de intensidade.

Mapeamento direto: da original para a transformada, podendo mais de um pixel cair no mesmo lugar
Mapeamento indireto: usa-se a inversa, aplicando-a transformada, mas que faz pixels da resultante serem mapeados ao mesmo da original

Coordenadas homogêneas: para permitir que as transformações espaciais possam ser realizadas por meio de multiplicação de matrizes e que possa haver combinação delas (x,y,z) -> (Wx, Wy, Wz, W).

[[attachment:_20230619_165656screenshot.png]]
*** Transformações afim
generalizam transf. de rotação, translação, escala, reflexão e cisalhamento.
Preservam o paralelismo e a proporção entre volumes, áreas e comprimentos.
[[attachment:_20230619_165716screenshot.png]]
**** Mudança de escala :ATTACH:
[[attachment:_20230619_170134screenshot.png]]
**** Translação :ATTACH:

[[attachment:_20230619_170202screenshot.png]]

**** Rotação
Em 2d é dado pela matriz
cos -sen
sen cos
*** Projeções :ATTACH:
Cada um dos pontos que formam uma cena no espaço tridimensional possa ser projetado no plano de imagem.
- Ortográfica :: pontos são projetados ao longo de linhas paralelas na imagem, projetamos em um dos plano. A matriz é a identidade com coeficiente zero no plano a ser projetado.
- Perspecitva :: tamanho dos objetos reduz conforme a distância. Lembre-se de ótica do EM.
  O centro da lente fica no eixo z, a uma distância $f$ focal da origem.
[[attachment:_20230619_171103screenshot.png]]
[[attachment:_20230619_171041screenshot.png]]

[[attachment:_20230619_172529screenshot.png]]
*** TODO Interpolação
*** Técnicas de registro
Iterativo, correlação de fase (fourrier)

** DONE Compressão
CLOSED: [2023-06-19 seg 13:26]
:PROPERTIES:
:EFFORT:   123
:END:

- Sem perda :: imagens cujos dados são de difícil aquisição.
- Com perda :: nem toda informção é recuperada, mas tá tudo be,

Em geral, as técnicas se baseam na redução de redundâncias.
Redundância é medido como a parte que foi jogada fora na compressão.
Uma compressão de 10:1, joga 90% fora.
Informação basea-se na capacidade de obter significado.
- Redundância de codificação :: Seja $\bar{L}$ o comprimento médio de bits para representação de um pixel, uma imagem de MxN possui codificação ótima com $MN\bar{L}$ bits.
  Um código é determinado ótimo se seu comprimento mínimo é $\bar{L}$.
  # Calcule a redundância por tal representação: ache L barra e use 1 - 1/taxa_compressão
- Redundância interpixel :: Pixels visinhos possuem valores próximos.
  Armazenar seus valores absolutos pode gastar mais espaço que só armazenar a diferença entre eles.
  - Codificação por comprimento de corrida :: (valor, quantidade_dele_consecutivas) para cada linha
- Redundância psicovisual :: Podemos remover algumas informações que o olho humano tende a não dar atenção.

*** Teoria da informação
A informação obtida a partir de um evento aleatório é dado por $I(E) = log_b \frac{1}{P(E)} = -log_b P(E)$.
Se um evento sempre/nunca ocorre, não há nenhuma informação a ser obtida.
Quanto mais improvável, maior a quantidade de informação a é necessário para comunicar o evento.

Entropia é $E = - \sum p_i log_2 p_i$
A eficiência da codificação pode ser definida como $n = E/\bar{L}$

*** Métodos de compressão :ATTACH:
:PROPERTIES:
:ID:       bc4bf780-600f-41d9-893b-752fce8e3170
:END:
**** Sem perdas
***** Huffman
Podemos usar códigos de tamano variável desde que nenhum código seja prefixo de outro de tamanho maior.
Para determinar os códigos, utilizamos a técnica de redução de fonte:
- ordenamos os símbolos por probabilidade
- a cada passo, combinamos os dois com menor probabilidade, somando-as.
[[attachment:_20230619_122001screenshot.png]]
- Depois, retornamos, da direita à esquerda atribuindo códigos às probabilidades. Adiciona-se um bit a cada símbolo préviamente agrupado
[[attachment:_20230619_122042screenshot.png]]

As vezes, resolver esse processo pode ser computacionalmente complexo ou gerar código proibitivamentes longos.
Uma solução para isso é aplicar à apenas os $m$ símbolos mais frequêntes enquanto o resto usa um prefixo livre e tamanho fixo.
***** Shannon-Fano
Divisão e conquista, cada divisão um fica com 0 e outro com 1.
***** Dicionário :ATTACH:
LZ78: vou adicionando simbolos à minha palavra enquanto a palavra resultante ainda aparecer no dicionário. Quando isso deixar de ser verdade, eu uso o código da maior palavra que consegui e começo de novo.

LZW: Iniciamos com um dicionário com todas as palavras de um símbolo. A cada passo, adicionamos o próximo simbolo c a nossa palavra I. Se I + c existe no dicionário, passamos para o próximo. Se não, utilizamos o último símbolo que tinhamos para I, criamos uma símbolo para I + c e recomeçamos com I = c.

Dessa forma, não é necessário transmitir o dicionário. No processe de decodificação, vamos descobrindo as palavras conforme decodificamos.
[[attachment:_20230619_125245screenshot.png]]
***** Comprimento de corrida
Ou eu uso (onde_começa, quanto_dura) para cada corrida ou, começando de uma corrida preta, alterno em quanto dura a corrida.

Por árvore binária: eu divido a linha na metade e marco se as partes são inteiras brancas/pretas. Caso contrário, ramifico.
***** Planos de bits
Caso sua imagem não seja binária, não tema. Podemos utilizar os planos de bits que correspondem ao mapeamento de cada i-ésimo bit em cada valor.
***** Preditiva sem perdas
Redundância interpixel
Ao invez de salvar a variação entre os pixels, utilizamos uma função que tenta adivinhar qual o próximo pixel e que na verdade salvo o erro dessa função. Assim, na hora de decodificar, tentamos prever o pixel e adicionamos o erro salvo.
Quanto mais precisa for a predição, menor os valores de erro, menor o espaço.
**** Com perdas
***** Preditiva com perdas
Mesmo processo do sem perdas, mas agora tendemos a jogar fora algumas informações do erro para que este não se acumule. A função quantizadora pode, por exemplo, considerar erros muito pequenos como zero. Para evitar que esse "arredondamento" acumule-se, utilizamo-no também no cálculo do erro.
***** Modulação delta
O preditor preve que o pixel será igual e o erro só pdoe ser +/- o delta
***** Modulação Còdigo de Pulso Diferencial
Assume-se que o erro devido a quantização é irrelevante e utiliza-se um preditor mais sofisticado, de forma a minimizar o erro médio quadrático.
***** Transformada
Utiliza-se janelas pequenas de 8x8 ou 16x16 nas quais aplicamos trasnformadas como a de Fourrier ou discreta do cosseno para descobrir os coeficientes que descrevem aquela região. Podemos descartar os coeficientes que descrevem o menor número de informações a fim de reduzir o espaço de armazenamento e guardar o resto para ser decodificado.

Não podemos usar grandes janelas pois estas não possuem uniformidade o que causaria muitos coeficientes.
*** Padronização JPEG
Ordenamos por zigue-zague para facilitar a codificação por entropia
Realizar as operações em matrizes maiores possui um custo computacional elevado quando tratamos de transformadas, mas, até um certo ponto, há vatagem já que o valor médio, chamado DC e cada janela, é muito similar em janelas vizinhas, o que torna muito útil técnicas preditivas.
** KILL Complemento
CLOSED: [2023-06-19 seg 17:33]
:PROPERTIES:
:EFFORT:   21
:END:
** KILL Redução de dimensionalidade
CLOSED: [2023-06-19 seg 17:32]
:PROPERTIES:
:EFFORT:   100
:END:
* Provas
** P1
DEADLINE: <2023-05-17 Wed>
** P2 [69%]
*** TODO 1. Estração de borda por operador morfológico
*** TODO 2. Efeitos causados à representação quadtree após mudança em escala, tranlação ou rotação?
*** DONE 3. Entropia / código de huffman
[[Compressão]]
Entropia é dada pela soma $- \sum p(s_i) log_2 p(s_i)$
Código Huffman usa a redução de fontes na frequência que esses valores apreecem. COmbinando 95 com 169, depois o resultante com 21. 243 código 0, 21 código 10, 95 código 110 e 168 código 111.
*** TODO 4. Codificações de Huffman
[[Compressão]]
| simbol | prob |    1 |    2 |    3 |
|--------+------+------+------+------+
| a      | 0.55 | 0.55 | 0.55 | 0.55 |
| b      | 0.15 | 0.15 | 0.30 | 0.45 |
| c      | 0.15 | 0.15 | 0.15 |      |
| d      | 0.10 | 0.15 |      |      |
| e      | 0.05 |      |      |      |

a = 0
b = 10
c = 110
d = 1110
e = 1111
média = 0.55 + 0.30 + 0.45 + 0.4 + 0.2 = 1.9

a = 0
b = 100
c = 101
d = 110
e = 111
média = 0.55 + 0.45 + 0.45 + 0.3 + 0.15 = 1.9

se eu fiz certo, eles possuem o mesmo comprimento médio
*** TODO 5. Construa dícionário e LZW
[[Compressão]]
a b c bc cc ca ac cb bcc ccc cccc ccccc
1 2 2 0 2 3   4    9     10     5 9
b c c a c bc cc  ccc  cccc ca ccc

a b c
1 2 2 0 2 3 4 9 10 5 9
b
*** DONE 6. Cores subtrativos / aditivos
[[Cores]]
Modelos de cores subtrativos são baseados na adição de filtros para remoção de frequências, como CMY utilizando em toners, apesar de nesse caso ser necessário adicionar o K de black para diminuir o uso de cores. Nesse modelo, preto é a presença de todos os filtros.

*** DONE 7. Vantagens da codificação aritmética para compressão
[[Compressão]]
Ele é extremamente eficiente em tamanho da representação, apesar de conter problemas de precisão no desempenho da decodificação.
*** DONE 8. Redundância em compressão
[[Compressão]]
Redundância de coficação, interpixel e interpretação humana. A primeira se dá a um uso excessivo de pixels para representar os símbolos, a segunda pelo fato de pixels próximos terem valores próximos (podemos então usar compressões preditivas) e o terceiro se dá pelo fato do olho humana não conseguir distringuir todas as informações presentes e dar mais valores a algumas.
*** TODO 9. Vantagens e desvantagens de usar blocos de tamanhos diferentes no cálculo da transformada discreta do cosseno no JPEG
[[Compressão]]
Blocos maiores possuem mais informações mas são bem mais custosos de computar.
Blocos menores são mais fácieis de realizar a DCT mas abstraem menos da informação.
*** TODO 10. Vantagem da ordenação zig-zag do JPEG?
[[Compressão]]
Facilita a codificação por entropia dos coeficientes AC da transformada discreta do cosseno dentro das janelas 8x8.
*** DONE 11. Compressão com perda
[[Compressão]]
Predição com perdas na qual fazemos uma quantização do erro em pról de reduzir o tamanho necessário deste.
Por transformada, na qual dividimos a imagem em partes, aplicamos uma transformada e descartamos coeficiêntes que menos adicionam informações.
*** DONE 12. Técnicas preditivas de compressão de imagens. Descreva a principal diferença entre técnicas preditivas sem e com perdas.
[[Compressão]]
Técnicas preditivas sem perdas armazenam o valor exato do erro, enquanto técnicas com perda utilizam a quantização ou modularização do valor do erro para economizar espaço em detrimento de um pouco de qualidade.
*** DONE 13. Código de comprimento de corridas
[[Compressão]]
3 4 4 4 2 1 2 1 3 ...
lembrar que transformamos a imagem num grande vetor 1D
*** DONE 14. Versão binária da unidade de textura, padrões locais binários.
CLOSED: [2023-06-19 seg 16:03]
[[Textura]]
Reduz o número de entradas no espectro de textura, o que permite uma representação mais sucinta.
*** DONE 15. Padrões locais binários demonstram ser invariantes a tranformações monotônicas aplicadas à imagem. Quais as vantagens?
CLOSED: [2023-06-19 seg 16:03]
[[Textura]]
O fato da transformação ser monotônica faz com que as comparações entre os valores dos pixels não mude, o que, pela definição de LBP, não modifica a representação. Assim, temos que, apesar de uma transformação alterar os valores da imagem, conseguimos manter a nossa representação do que é ainda a mesma estrutura de textura.

Podemos, sem medo de incubir o custo de recomputar o LBP fazer alterações e garantir que texturas que soferam apenas transformações monotônicas manteram sua unidade de textura.
*** DONE 16. Matriz de concorrência, momento angular, discrminação de texturas.
CLOSED: [2023-06-19 seg 16:02]
[[Textura]]
| x | 0 | 1 | 2 | 3 |
| 0 |   |   |   |   |
| 1 |   |   | 6 |   |
| 2 |   | 6 |   |   |
| 3 |   |   |   |   |

Momento angular = 1/12^2 + 1/12^2 = 1/72

| x | 0 | 1 | 2 | 3 |
| 0 |   | 1 |   |   |
| 1 | 1 |   | 2 |   |
| 2 |   | 2 |   | 3 |
| 3 |   |   | 3 |   |

Segundo Momento Angular = (2 + 8 + 18)/12^2 = 14/72

Essa medida pode ser usada sim, SMA maiores, representam níveis de energia maiores e portanto texturas ásperas

*SEGUNDO MOMENTO ANGULAR ALTO -> ÁSPERA*
*** DONE 17. Rotações 2d são aditivas
CLOSED: [2023-06-19 seg 17:19]
Ou seja, rotação por $\alpha_1$ e posterior rotação por $\alpha_2$ é igual a rotação por $\alpha = \alpha_1 + \alpha_2$.

Só expandir as definições de rotação como x = xcos - siny e y = xsin + ycos. No final tem que fazer a regrinha de trigonometria.
*** DONE 18. Escalas 2d são multiplicativas
CLOSED: [2023-06-19 seg 17:12]
São multiplicatias pq na conta dos fatores fica uma multiplicação entre eles vezes o valor original
*** DONE 19. Mostre que a rotação e escala são comutativas se os fatores de escala S_x = S_y
CLOSED: [2023-06-19 seg 17:31]
Mesma ideia das anteriores.
*** DONE 20. Transformada afim
CLOSED: [2023-06-19 seg 17:31]
As transformadas afins generalizam transformações como rotação, translação, escala enquanto mantém o paralelismo e as proporções entre volumes, áreas e comprimentos entre objetos da imagem. Podem ser representadas na forma matricial com coordenada homogênea de forma que a útlima linha seja 0 0 0 1.
*** DONE 21. Projeção ortográfica e projeção perspectiva.
CLOSED: [2023-06-19 seg 17:31]
[[Registro]]
Projeção ortográfica possui um centro de projeção no infinito, mantém as retas paralelas e as dimensões intactas.
Já a projeção de perspectiva modifica a dimensão dos objetos baseado em suas distâncias ao foco da lente (distância focal)
*** DONE 23. Coordenadas homogêneas para representação de transformações geométricas
CLOSED: [2023-06-19 seg 17:32]
[[Registro]]
Permite que modelemos as transformações via matrizes e utilizemos as operações matriciais para combinar transformadas.
*** TODO 24. Descrve três técnicas de registro de imagem.
[[Registro]]
* Trabalhos
** DONE Trabalho 1
CLOSED: [2023-04-23 Sun 21:20]
** DONE Trabalho 2
CLOSED: [2023-05-10 Wed 21:03] DEADLINE: <2023-05-05 sex>
** TODO Trabalho 3
DEADLINE: <2023-05-26 Fri>
